{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/washington/code/nlw-03-projeto-happy/mobile/src/pages/CreateOrphanage/SelectMapPosition/index.tsx\";\n\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { getCurrentPositionAsync, requestPermissionsAsync } from 'expo-location';\nimport { Container, Map, NextButton, NextButtonText } from \"./styles\";\nimport mapMarkerImg from \"../../../assets/images/map-marker.png\";\n\nvar SelectMapPosition = function SelectMapPosition() {\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    latitude: 0,\n    longitude: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: 0,\n    longitude: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      initialPosition = _useState4[0],\n      setInitialPosition = _useState4[1];\n\n  useFocusEffect(function () {\n    loadInitialPosition();\n  });\n\n  function handleSelectMapPosition(event) {\n    setPosition(event.nativeEvent.coordinate);\n  }\n\n  function loadInitialPosition() {\n    var _await$requestPermiss, granted, location, _location$coords, latitude, longitude;\n\n    return _regeneratorRuntime.async(function loadInitialPosition$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n          case 2:\n            _await$requestPermiss = _context.sent;\n            granted = _await$requestPermiss.granted;\n\n            if (!granted) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(getCurrentPositionAsync());\n\n          case 7:\n            location = _context.sent;\n            _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n            setInitialPosition({\n              latitude: latitude,\n              longitude: longitude\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Map, {\n    provider: PROVIDER_GOOGLE,\n    initialRegion: {\n      latitude: initialPosition.latitude,\n      longitude: initialPosition.longitude,\n      latitudeDelta: 0.008,\n      longitudeDelta: 0.008\n    },\n    onPress: handleSelectMapPosition,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, position.latitude !== 0 && React.createElement(Marker, {\n    icon: mapMarkerImg,\n    coordinate: {\n      latitude: position.latitude,\n      longitude: position.longitude\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), position.latitude !== 0 && React.createElement(NextButton, {\n    onPress: function onPress() {\n      navigation.navigate('OrphanageData', {\n        position: position\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(NextButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Pr\\xF3ximo\")));\n};\n\nexport default SelectMapPosition;","map":{"version":3,"sources":["/Users/washington/code/nlw-03-projeto-happy/mobile/src/pages/CreateOrphanage/SelectMapPosition/index.tsx"],"names":["useFocusEffect","useNavigation","React","useState","Marker","PROVIDER_GOOGLE","getCurrentPositionAsync","requestPermissionsAsync","Container","Map","NextButton","NextButtonText","mapMarkerImg","SelectMapPosition","navigation","latitude","longitude","position","setPosition","initialPosition","setInitialPosition","loadInitialPosition","handleSelectMapPosition","event","nativeEvent","coordinate","granted","location","coords","latitudeDelta","longitudeDelta","navigate"],"mappings":"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","sourcesContent":["/* eslint-disable object-curly-newline */\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { MapEvent, Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport {\n  getCurrentPositionAsync,\n  requestPermissionsAsync,\n} from 'expo-location';\nimport { Container, Map, NextButton, NextButtonText } from './styles';\n\nimport mapMarkerImg from '../../../assets/images/map-marker.png';\n\nconst SelectMapPosition: React.FC = () => {\n  const navigation = useNavigation();\n\n  const [position, setPosition] = useState({ latitude: 0, longitude: 0 });\n  const [initialPosition, setInitialPosition] = useState({\n    latitude: 0,\n    longitude: 0,\n  });\n\n  useFocusEffect(() => {\n    loadInitialPosition();\n  });\n\n  function handleSelectMapPosition(event: MapEvent) {\n    setPosition(event.nativeEvent.coordinate);\n  }\n\n  async function loadInitialPosition() {\n    const { granted } = await requestPermissionsAsync();\n\n    if (granted) {\n      const location = await getCurrentPositionAsync();\n\n      const { latitude, longitude } = location.coords;\n\n      setInitialPosition({ latitude, longitude });\n    }\n  }\n\n  return (\n    <Container>\n      <Map\n        provider={PROVIDER_GOOGLE}\n        initialRegion={{\n          latitude: initialPosition.latitude,\n          longitude: initialPosition.longitude,\n          latitudeDelta: 0.008,\n          longitudeDelta: 0.008,\n        }}\n        onPress={handleSelectMapPosition}\n      >\n        {position.latitude !== 0 && (\n          <Marker\n            icon={mapMarkerImg}\n            coordinate={{\n              latitude: position.latitude,\n              longitude: position.longitude,\n            }}\n          />\n        )}\n      </Map>\n\n      {position.latitude !== 0 && (\n        <NextButton\n          onPress={() => {\n            navigation.navigate('OrphanageData', { position });\n          }}\n        >\n          <NextButtonText>Pr√≥ximo</NextButtonText>\n        </NextButton>\n      )}\n    </Container>\n  );\n};\n\nexport default SelectMapPosition;\n"]},"metadata":{},"sourceType":"module"}